clear all; close all; clc;

%% Read data from file
filename = './Parameter_Estimation/cases_clean.csv';
hosp_file = './Parameter_Estimation/hospitalization_clean.csv';
M = csvread(filename,1);
hosp_actual = csvread(hosp_file,1);

cases = M(:,1)/1000000;
deaths = M(:,2)/1000000;

r = 0.7;
m = 0.073;
c = 0.0323;

%% Estimating BETA comparing actual cases

% Betas to be Tested
betas = [0.001:0.001:0.01];

% List of Errors
error = [1:length(betas)];

% Test for each beta and calculate the squared errors
for beta = 1:length(betas)
    results = vaccination_sim(betas(beta),r,m,c);
    I = results(:,6);
    % Max Iterations
    iterations = min(floor(length(I)/10),length(cases));
    for i = 1:iterations
        error(beta) = error(beta) + (cases(i) - I(i*10))^2;
    end
end

[c,i] = min(error);
beta = betas(i);

hosps = [0.005:0.001:0.02];
max_hosp = [1:length(hosps)];

for hosp = 1:length(hosps)
    results = vaccination_sim(beta,r,m,hosps(hosp));
    H = results(:,8);
    max_hosp(hosp) = max(H);
end

error = abs(max_hosp - ());
[c,i] = min(error);
hosp_rate = hosps(i);

% m to be Tested
ms = [0.01:0.001:0.2];

% List of Errors
max_deaths = [1:length(ms)]; 

% Calculate m and test against absolute errors
for m = 1:length(ms)
    results = vaccination_sim(beta,r,ms(m),hosp_rate);
    D = results(:,9);
    % Max Iterations
    max_deaths = max(D);
end


[c,i] = min(error);
m = ms(i);

